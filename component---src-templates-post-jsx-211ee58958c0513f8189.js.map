{"version":3,"sources":["webpack:///./src/templates/post.jsx"],"names":["PostHeroContainer","PostHeroAnnotation","colors","grey600","PostCategory","PostTitle","PostBody","PostMetas","PostAuthor","PostDate","Post","post","meta","title","post_title","text","titleTemplate","name","content","description","property","author","concat","RichText","render","post_category","post_author","format","post_date","post_hero_image","src","url","alt","post_hero_annotation","post_body","data","postContent","prismic","allPosts","edges","node","site","siteMetadata","query"],"mappings":"0QAUA,IAAMA,EAAoB,YAAO,MAAP,sBAAH,0JAajBC,EAAqB,YAAO,MAAP,sBAAH,gDAKPC,IAAOC,QALA,8DAelBC,EAAe,YAAO,MAAP,sBAAH,yEAKLF,IAAOC,QALF,wCAaZE,EAAY,YAAO,MAAP,sBAAH,6FAUTC,EAAW,YAAO,MAAP,sBAAH,0HAcRC,EAAY,YAAO,MAAP,sBAAH,wIAQFL,IAAOC,QARL,KAWTK,EAAa,YAAO,MAAP,sBAAH,qCAIVC,EAAW,YAAO,MAAP,sBAAH,qCAIRC,EAAO,SAAC,GAAmB,IAAjBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAClB,OACI,8BACI,YAAC,IAAD,CACIC,MAAUF,EAAKG,WAAW,GAAGC,KAAxB,qCACLC,cAAa,QAAUJ,EAAKC,MAC5BD,KAAM,CACF,CACIK,KAAM,cACNC,QAASN,EAAKO,aAElB,CACIC,SAAU,WACVF,QAAYP,EAAKG,WAAW,GAAGC,KAAxB,sCAEX,CACIK,SAAU,iBACVF,QAASN,EAAKO,aAElB,CACIC,SAAU,UACVF,QAAS,WAEb,CACID,KAAM,eACNC,QAAS,WAEb,CACID,KAAM,kBACNC,QAASN,EAAKS,QAElB,CACIJ,KAAM,gBACNC,QAASN,EAAKC,OAElB,CACII,KAAM,sBACNC,QAASN,EAAKO,cAEpBG,OAAOV,KAEb,YAAC,IAAD,KACI,YAACR,EAAD,KACKmB,WAASC,OAAOb,EAAKc,gBAE1B,YAACpB,EAAD,KACKkB,WAASC,OAAOb,EAAKG,aAE1B,YAACP,EAAD,KACI,YAACC,EAAD,KACKG,EAAKe,aAEV,YAACjB,EAAD,KACI,YAAC,IAAD,CAAQkB,OAAO,gBAAgBhB,EAAKiB,aAGvCjB,EAAKkB,iBACN,YAAC7B,EAAD,KACI,mBAAK8B,IAAKnB,EAAKkB,gBAAgBE,IAAKC,IAAI,SACxC,YAAC/B,EAAD,KACKsB,WAASC,OAAOb,EAAKsB,wBAIlC,YAAC3B,EAAD,KACKiB,WAASC,OAAOb,EAAKuB,eAO3B,sBAAc,IAAXC,EAAW,EAAXA,KACRC,EAAcD,EAAKE,QAAQC,SAASC,MAAM,GAAGC,KAC7C5B,EAAOuB,EAAKM,KAAKC,aACvB,OACI,YAAChC,EAAD,CAAMC,KAAMyB,EAAaxB,KAAMA,KAShC,IAAM+B,EAAQ,CAAH","file":"component---src-templates-post-jsx-211ee58958c0513f8189.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport Moment from 'react-moment';\nimport { graphql } from 'gatsby';\nimport { RichText } from \"prismic-reactjs\";\nimport styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport Layout from \"components/Layout\";\n\nconst PostHeroContainer = styled(\"div\")`\n    max-height: 500px;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    margin-bottom: 3em;\n\n    img {\n        width: 100%;\n    }\n`\n\nconst PostHeroAnnotation = styled(\"div\")`\n    padding-top: 0.25em;\n\n    h6 {\n        text-align: right;\n        color: ${colors.grey600};\n        font-weight: 400;\n        font-size: 0.85rem;\n    }\n\n    a {\n        color: currentColor;\n    }\n`\n\nconst PostCategory = styled(\"div\")`\n    max-width: 550px;\n    margin: 0 auto;\n    text-align: center;\n    font-weight: 600;\n    color: ${colors.grey600};\n\n    h5 {\n        margin-top: 0;\n        margin-bottom: 1em;\n    }\n`\n\nconst PostTitle = styled(\"div\")`\n    max-width: 550px;\n    margin: 0 auto;\n    text-align: center;\n\n    h1 {\n        margin-top: 0;\n    }\n`\n\nconst PostBody = styled(\"div\")`\n    max-width: 550px;\n    margin: 0 auto;\n\n    .block-img {\n        margin-top: 3.5em;\n        margin-bottom: 0.5em;\n\n        img {\n            width: 100%;\n        }\n    }\n`\n\nconst PostMetas = styled(\"div\")`\n    max-width: 550px;\n    margin: 0 auto;\n    display: flex;\n    align-items: center;\n    margin-bottom: 2em;\n    justify-content: space-between;\n    font-size: 0.85em;\n    color: ${colors.grey600};\n`\n\nconst PostAuthor = styled(\"div\")`\n    margin: 0;\n`\n\nconst PostDate = styled(\"div\")`\n    margin: 0;\n`\n\nconst Post = ({ post, meta }) => {\n    return (\n        <>\n            <Helmet\n                title={`${post.post_title[0].text} | Prist, Gatsby & Prismic Starter`}\n                titleTemplate={`%s | ${meta.title}`}\n                meta={[\n                    {\n                        name: `description`,\n                        content: meta.description,\n                    },\n                    {\n                        property: `og:title`,\n                        content: `${post.post_title[0].text} | Prist, Gatsby & Prismic Starter`,\n                    },\n                    {\n                        property: `og:description`,\n                        content: meta.description,\n                    },\n                    {\n                        property: `og:type`,\n                        content: `website`,\n                    },\n                    {\n                        name: `twitter:card`,\n                        content: `summary`,\n                    },\n                    {\n                        name: `twitter:creator`,\n                        content: meta.author,\n                    },\n                    {\n                        name: `twitter:title`,\n                        content: meta.title,\n                    },\n                    {\n                        name: `twitter:description`,\n                        content: meta.description,\n                    },\n                ].concat(meta)}\n            />\n            <Layout>\n                <PostCategory>\n                    {RichText.render(post.post_category)}\n                </PostCategory>\n                <PostTitle>\n                    {RichText.render(post.post_title)}\n                </PostTitle>\n                <PostMetas>\n                    <PostAuthor>\n                        {post.post_author}\n                    </PostAuthor>\n                    <PostDate>\n                        <Moment format=\"MMMM D, YYYY\">{post.post_date}</Moment>\n                    </PostDate>\n                </PostMetas>\n                    {post.post_hero_image && (\n                    <PostHeroContainer>\n                        <img src={post.post_hero_image.url} alt=\"bees\" />\n                        <PostHeroAnnotation>\n                            {RichText.render(post.post_hero_annotation)}\n                        </PostHeroAnnotation>\n                    </PostHeroContainer>\n                )}\n                <PostBody>\n                    {RichText.render(post.post_body)}\n                </PostBody>\n            </Layout>\n        </>\n    )\n}\n\nexport default ({ data }) => {\n    const postContent = data.prismic.allPosts.edges[0].node;\n    const meta = data.site.siteMetadata;\n    return (\n        <Post post={postContent} meta={meta}/>\n    )\n}\n\nPost.propTypes = {\n    post: PropTypes.object.isRequired,\n    meta: PropTypes.object.isRequired,\n};\n\nexport const query = graphql`\n    query PostQuery($uid: String) {\n        prismic {\n            allPosts(uid: $uid) {\n                edges {\n                    node {\n                        post_title\n                        post_hero_image\n                        post_hero_annotation\n                        post_date\n                        post_category\n                        post_body\n                        post_author\n                        post_preview_description\n                        _meta {\n                            uid\n                        }\n                    }\n                }\n            }\n        }\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`"],"sourceRoot":""}