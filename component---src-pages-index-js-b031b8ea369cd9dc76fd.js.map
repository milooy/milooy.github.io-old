{"version":3,"sources":["webpack:///./src/components/About.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/_ui/Button.jsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["AboutContainer","dimensions","maxwidthTablet","maxwidthMobile","AboutLinkContainer","AboutLink","AboutBio","AboutActions","About","bio","socialLinks","map","social","i","key","href","about_link","spans","data","url","target","rel","text","RichText","render","Button","className","Hero","colors","blue500","orange500","purple500","green500","teal500","blue600","blue200","orange600","orange200","purple600","purple200","green600","green200","teal600","teal200","Section","WorkAction","Link","RenderBody","home","projects","meta","title","titleTemplate","name","content","description","property","author","concat","hero_title","hero_button_link","hero_button_text","project","ProjectCard","category","node","project_category","project_title","project_preview_description","thumbnail","project_preview_thumbnail","uid","_meta","to","about_title","about_bio","about_links","query","doc","prismic","allHomepages","edges","slice","pop","allProjects","site","siteMetadata","Layout","ButtonContainer","blue400","pink400","purple400","blue300","this","props","children","source","excluded","sourceKeys","Object","keys","length","indexOf","onClick","Component"],"mappings":"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","file":"component---src-pages-index-js-b031b8ea369cd9dc76fd.js","sourcesContent":["import React from \"react\";\nimport Button from \"components/_ui/Button\";\nimport styled from \"@emotion/styled\";\nimport dimensions from \"styles/dimensions\";\nimport { RichText } from \"prismic-reactjs\";\nimport PropTypes from \"prop-types\";\n\nconst AboutContainer = styled(\"div\")`\n    padding-top: 1em;\n    display: grid;\n    grid-template-columns: 8em 1fr 8em;\n    grid-gap: 3em;\n\n    @media(max-width: ${dimensions.maxwidthTablet}px) {\n        grid-template-columns: 1fr 3fr 1fr;\n    }\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-template-columns: 7em 1fr;\n        grid-template-rows: 3em 1fr;\n        grid-gap: 2em;\n    }\n`\n\nconst AboutLinkContainer = styled(\"div\")`\n    padding-top: 1em;\n    padding-bottom: 3em;\n    display: flex;\n    flex-direction: column;\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-row: 2;\n    }\n`\n\nconst AboutLink = styled(\"a\")`\n    margin-bottom: 1.5em;\n    font-weight: 600;\n    line-height: 1.9;\n    text-decoration: none;\n    color: currentColor;\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        opacity: 0;\n        transition: all 400ms ease-in-out;\n    }\n\n    &:hover {\n        span {\n            transform: translateX(0px);\n            opacity: 1;\n            transition: all 150ms ease-in-out;\n        }\n    }\n`\n\nconst AboutBio = styled(\"div\")`\n    padding-bottom: 3em;\n    max-width: 480px;\n\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-row: 2;\n    }\n`\n\nconst AboutActions = styled(\"div\")`\n    padding-top: 1em;\n    padding-bottom: 3em;\n\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        padding: 0;\n        grid-column: 1 / -1;\n        grid-row: 1;\n    }\n`\n\n\nconst About = ({ bio, socialLinks }) => (\n    <AboutContainer>\n        <AboutLinkContainer>\n            {socialLinks.map((social, i) => (\n                <AboutLink\n                    key={i}\n                    href={social.about_link[0].spans[0].data.url}\n                    target=\"_blank\" rel=\"noopener noreferrer\">\n                    {social.about_link[0].text}\n                    <span>&#8594;</span>\n                </AboutLink>\n            ))}\n        </AboutLinkContainer>\n        <AboutBio>\n            {RichText.render(bio)}\n        </AboutBio>\n        <AboutActions>\n            <a href=\"mailto:marguerite.roth@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button className=\"Button--secondary\">\n                    Email me\n                </Button>\n            </a>\n        </AboutActions>\n    </AboutContainer>\n)\n\nexport default About;\n\nAbout.propTypes = {\n    bio: PropTypes.array.isRequired,\n    socialLinks: PropTypes.array.isRequired,\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { RichText } from \"prismic-reactjs\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport dimensions from \"styles/dimensions\";\nimport Button from \"components/_ui/Button\";\nimport About from \"components/About\";\nimport Layout from \"components/Layout\";\nimport ProjectCard from \"components/ProjectCard\";\n\nconst Hero = styled(\"div\")`\n    padding-top: 2.5em;\n    padding-bottom: 3em;\n    margin-bottom: 6em;\n    max-width: 830px;\n\n    @media(max-width:${dimensions.maxwidthMobile}px) {\n       margin-bottom: 3em;\n    }\n\n    h1 {\n        margin-bottom: 1em;\n\n        a {\n            text-decoration: none;\n            transition: all 100ms ease-in-out;\n\n            &:nth-of-type(1) { color: ${colors.blue500}; }\n            &:nth-of-type(2) { color: ${colors.orange500}; }\n            &:nth-of-type(3) { color: ${colors.purple500}; }\n            &:nth-of-type(4) { color: ${colors.green500}; }\n            &:nth-of-type(5) { color: ${colors.teal500}; }\n\n            &:hover {\n                cursor: pointer;\n                transition: all 100ms ease-in-out;\n\n                &:nth-of-type(1) { color: ${colors.blue600};    background-color: ${colors.blue200};}\n                &:nth-of-type(2) { color: ${colors.orange600};  background-color: ${colors.orange200};}\n                &:nth-of-type(3) { color: ${colors.purple600};  background-color: ${colors.purple200};}\n                &:nth-of-type(4) { color: ${colors.green600};   background-color: ${colors.green200};}\n                &:nth-of-type(5) { color: ${colors.teal600};    background-color: ${colors.teal200};}\n\n            }\n        }\n    }\n`\n\nconst Section = styled(\"div\")`\n    margin-bottom: 10em;\n    display: flex;\n    flex-direction: column;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        margin-bottom: 4em;\n    }\n\n    &:last-of-type {\n        margin-bottom: 0;\n    }\n`\n\nconst WorkAction = styled(Link)`\n    font-weight: 600;\n    text-decoration: none;\n    color: currentColor;\n    transition: all 150ms ease-in-out;\n    margin-left: auto;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n       margin: 0 auto;\n    }\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        transition: transform 400ms ease-in-out;\n    }\n\n    &:hover {\n        color: ${colors.blue500};\n        transition: all 150ms ease-in-out;\n\n        span {\n            transform: translateX(0px);\n            opacity: 1;\n            transition: transform 150ms ease-in-out;\n        }\n    }\n`\n\nconst RenderBody = ({ home, projects, meta }) => (\n    <>\n        <Helmet\n            title={meta.title}\n            titleTemplate={`%s | ${meta.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: meta.description,\n                },\n                {\n                    property: `og:title`,\n                    content: meta.title,\n                },\n                {\n                    property: `og:description`,\n                    content: meta.description,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: meta.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: meta.title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: meta.description,\n                },\n            ].concat(meta)}\n        />\n        <Hero>\n            <>\n                {RichText.render(home.hero_title)}\n            </>\n            <a href={home.hero_button_link.url}\n               target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button>\n                    {RichText.render(home.hero_button_text)}\n                </Button>\n            </a>\n        </Hero>\n        <Section>\n            {projects.map((project, i) => (\n                <ProjectCard\n                    key={i}\n                    category={project.node.project_category}\n                    title={project.node.project_title}\n                    description={project.node.project_preview_description}\n                    thumbnail={project.node.project_preview_thumbnail}\n                    uid={project.node._meta.uid}\n                />\n            ))}\n            <WorkAction to={\"/work\"}>\n                See more work <span>&#8594;</span>\n            </WorkAction>\n        </Section>\n        <Section>\n            {RichText.render(home.about_title)}\n            <About\n                bio={home.about_bio}\n                socialLinks={home.about_links}\n            />\n        </Section>\n    </>\n);\n\nexport default ({ data }) => {\n    //Required check for no data being returned\n    const doc = data.prismic.allHomepages.edges.slice(0, 1).pop();\n    const projects = data.prismic.allProjects.edges;\n    const meta = data.site.siteMetadata;\n\n    if (!doc || !projects) return null;\n\n    return (\n        <Layout>\n            <RenderBody home={doc.node} projects={projects} meta={meta}/>\n        </Layout>\n    )\n}\n\nRenderBody.propTypes = {\n    home: PropTypes.object.isRequired,\n    projects: PropTypes.array.isRequired,\n    meta: PropTypes.object.isRequired,\n};\n\nexport const query = graphql`\n    {\n        prismic {\n            allHomepages {\n                edges {\n                    node {\n                        hero_title\n                        hero_button_text\n                        hero_button_link {\n                            ... on PRISMIC__ExternalLink {\n                                _linkType\n                                url\n                            }\n                        }\n                        content\n                        about_title\n                        about_bio\n                        about_links {\n                            about_link\n                        }\n                    }\n                }\n            }\n            allProjects {\n                edges {\n                    node {\n                        project_title\n                        project_preview_description\n                        project_preview_thumbnail\n                        project_category\n                        project_post_date\n                        _meta {\n                            uid\n                        }\n                    }\n                }\n            }\n        }\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`","import React, { Component } from 'react';\nimport styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport dimensions from \"styles/dimensions\";\n\nconst ButtonContainer = styled(\"button\")`\n    padding: 1em 2em;\n    background: ${colors.blue400};\n    font-weight: 600;\n    color: white;\n    outline: none;\n    border: none;\n    font-size: 1rem;\n    border-radius: 2px;\n    position: relative;\n    transition: background 100ms ease-in-out;\n\n    @media(max-width:${dimensions.maxwidthMobile}px) {\n        padding: 0.8em 1.8em;\n        font-size: 1em;\n    }\n\n    p {\n        margin: 0;\n    }\n\n    &:before {\n        content: \"\";\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(135deg, ${colors.pink400} 0%, ${colors.purple400} 100%);\n        z-index: -1;\n    }\n\n    &:hover {\n        cursor: pointer;\n        background: transparent;\n        transition: background 100ms ease-in-out;\n    }\n\n    &.Button--secondary {\n        background: ${colors.blue200};\n        color: ${colors.blue600};\n        padding: 0.95em 1.8em;\n        font-size: 0.95rem;\n\n        &:hover {\n            background: ${colors.blue300};\n            transition: background 100ms ease-in-out;\n        }\n    }\n`\n\nclass Button extends Component {\n    render() {\n        const { children, ...props } = this.props;\n        return (\n            <ButtonContainer\n                onClick={this.props.onClick}\n                {...props}>\n                {this.props.children}\n            </ButtonContainer>\n        );\n    }\n}\n\nexport default Button;","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}